-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS store.address
(
    address_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    address_uuid character varying(45) COLLATE pg_catalog."default" NOT NULL,
    address_name_aes character varying(128) COLLATE pg_catalog."default" NOT NULL,
    customer_id integer NOT NULL,
    CONSTRAINT address_pkey PRIMARY KEY (address_id, customer_id)
);

CREATE TABLE IF NOT EXISTS store.card
(
    card_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    card_uuid character varying(45) COLLATE pg_catalog."default" NOT NULL,
    card_number_aes character varying(64) COLLATE pg_catalog."default" NOT NULL,
    card_card_tail_number_aes character varying(64) COLLATE pg_catalog."default" NOT NULL,
    card_name_tag_aes character varying(45) COLLATE pg_catalog."default" NOT NULL,
    card_owner_name_aes character varying(64) COLLATE pg_catalog."default" NOT NULL,
    card_owner_address character varying(84) COLLATE pg_catalog."default" NOT NULL,
    customer_id integer NOT NULL,
    card_created_at timestamp without time zone NOT NULL,
    card_updated_at timestamp without time zone NOT NULL,
    CONSTRAINT card_pkey PRIMARY KEY (card_id, customer_id)
);

CREATE TABLE IF NOT EXISTS store.category
(
    category_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    category_uuid character varying(45) COLLATE pg_catalog."default" NOT NULL,
    category_name character varying(64) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT category_pkey PRIMARY KEY (category_id)
);

CREATE TABLE IF NOT EXISTS store.customer
(
    customer_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    customer_uuid character varying(45) COLLATE pg_catalog."default" NOT NULL,
    customer_name_sha character varying(84) COLLATE pg_catalog."default" NOT NULL,
    customer_name_aes character varying(64) COLLATE pg_catalog."default" NOT NULL,
    customer_dob date NOT NULL,
    customer_created_at timestamp without time zone NOT NULL,
    customer_updated_at timestamp without time zone NOT NULL,
    customer_cart_uuid character varying(45) COLLATE pg_catalog."default" NOT NULL,
    customer_nit_aes character varying(64) COLLATE pg_catalog."default" NOT NULL,
    customer_nit_sha character varying(84) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT customer_pkey PRIMARY KEY (customer_id)
);

CREATE TABLE IF NOT EXISTS store.customers_items
(
    customer_id integer NOT NULL,
    item_id integer NOT NULL,
    customers_items_purchase_date timestamp without time zone NOT NULL,
    CONSTRAINT customers_items_pkey PRIMARY KEY (customer_id, item_id)
);

CREATE TABLE IF NOT EXISTS store.item
(
    item_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    item_uuid character varying(45) COLLATE pg_catalog."default" NOT NULL,
    item_name character varying(45) COLLATE pg_catalog."default" NOT NULL,
    item_price numeric NOT NULL,
    item_price_off numeric,
    item_image_url character varying(45) COLLATE pg_catalog."default",
    item_price_off_until_date date,
    item_created_at timestamp without time zone NOT NULL,
    item_updated_at timestamp without time zone NOT NULL,
    item_quantity integer NOT NULL,
    CONSTRAINT item_pkey PRIMARY KEY (item_id)
);

CREATE TABLE IF NOT EXISTS store.item_has_category
(
    item_id integer NOT NULL,
    category_id integer NOT NULL,
    CONSTRAINT item_has_category_pkey PRIMARY KEY (item_id, category_id)
);

CREATE TABLE IF NOT EXISTS store.order_status
(
    order_status_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    order_status_uuid character varying(45) COLLATE pg_catalog."default" NOT NULL,
    order_status_name character varying(45) COLLATE pg_catalog."default" NOT NULL,
    order_status_step_number integer NOT NULL,
    CONSTRAINT order_status_pkey PRIMARY KEY (order_status_id)
);

CREATE TABLE IF NOT EXISTS store.orders
(
    order_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    order_uuid numeric NOT NULL,
    order_created_at timestamp without time zone NOT NULL,
    order_updated_at timestamp without time zone NOT NULL,
    order_active boolean DEFAULT true,
    order_total_amount character varying(45) COLLATE pg_catalog."default" NOT NULL,
    order_paid_at timestamp without time zone,
    item_id integer NOT NULL,
    customer_id integer NOT NULL,
    order_status_id integer NOT NULL,
    card_id integer NOT NULL,
    payment_method_id integer NOT NULL,
    CONSTRAINT orders_pkey PRIMARY KEY (order_id, item_id, customer_id, order_status_id, card_id, payment_method_id)
);

CREATE TABLE IF NOT EXISTS store.payment_method
(
    payment_method_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    payment_method_uuid character varying(45) COLLATE pg_catalog."default" NOT NULL,
    payment_method_name_aes character varying(64) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT payment_method_pkey PRIMARY KEY (payment_method_id)
);

CREATE TABLE IF NOT EXISTS store.sys_admin_user
(
    sys_user_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    sys_user_uuid character varying(45) COLLATE pg_catalog."default" NOT NULL,
    sys_user_email_aes character varying(64) COLLATE pg_catalog."default" NOT NULL,
    sys_user_email_sha character varying(84) COLLATE pg_catalog."default" NOT NULL,
    sys_user_password character varying(128) COLLATE pg_catalog."default" NOT NULL,
    sys_user_created_at timestamp without time zone NOT NULL,
    sys_user_updated_at timestamp without time zone NOT NULL,
    sys_user_attempts integer NOT NULL,
    sys_user_last_attempt timestamp without time zone NOT NULL,
    sys_user_enabled boolean NOT NULL DEFAULT true,
    CONSTRAINT sys_admin_user_pkey PRIMARY KEY (sys_user_id)
);

CREATE TABLE IF NOT EXISTS store.sys_user
(
    sys_user_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    sys_user_uuid character varying(45) COLLATE pg_catalog."default" NOT NULL,
    sys_user_email_aes character varying(64) COLLATE pg_catalog."default" NOT NULL,
    sys_user_email_sha character varying(84) COLLATE pg_catalog."default" NOT NULL,
    sys_user_password character varying(128) COLLATE pg_catalog."default" NOT NULL,
    sys_user_created_at timestamp without time zone NOT NULL,
    sys_user_updated_at timestamp without time zone NOT NULL,
    sys_user_attempts integer NOT NULL,
    sys_user_last_attempt timestamp without time zone NOT NULL,
    sys_user_enabled boolean NOT NULL DEFAULT true,
    customer_id integer NOT NULL,
    CONSTRAINT sys_user_pkey PRIMARY KEY (sys_user_id, customer_id)
);

CREATE TABLE IF NOT EXISTS store.migrations
(
    migration_id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    migration_name character varying NOT NULL,
    version character varying NOT NULL,
    CONSTRAINT migration_pkey PRIMARY KEY (migration_id)
);

ALTER TABLE IF EXISTS store.address
    ADD CONSTRAINT fk_address_customer1 FOREIGN KEY (customer_id)
    REFERENCES store.customer (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS store.card
    ADD CONSTRAINT fk_card_customer1 FOREIGN KEY (customer_id)
    REFERENCES store.customer (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS store.customers_items
    ADD CONSTRAINT fk_customer_has_item_customer1 FOREIGN KEY (customer_id)
    REFERENCES store.customer (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS store.customers_items
    ADD CONSTRAINT fk_customer_has_item_item1 FOREIGN KEY (item_id)
    REFERENCES store.item (item_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS store.item_has_category
    ADD CONSTRAINT fk_item_has_category_category1 FOREIGN KEY (category_id)
    REFERENCES store.category (category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS store.item_has_category
    ADD CONSTRAINT fk_item_has_category_item FOREIGN KEY (item_id)
    REFERENCES store.item (item_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS store.orders
    ADD CONSTRAINT fk_order_card1 FOREIGN KEY (card_id, customer_id)
    REFERENCES store.card (card_id, customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS store.orders
    ADD CONSTRAINT fk_order_customer1 FOREIGN KEY (customer_id)
    REFERENCES store.customer (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS store.orders
    ADD CONSTRAINT fk_order_item1 FOREIGN KEY (item_id)
    REFERENCES store.item (item_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS store.orders
    ADD CONSTRAINT fk_order_order_status1 FOREIGN KEY (order_status_id)
    REFERENCES store.order_status (order_status_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS store.orders
    ADD CONSTRAINT fk_order_payment_method1 FOREIGN KEY (payment_method_id)
    REFERENCES store.payment_method (payment_method_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS store.sys_user
    ADD CONSTRAINT fk_sys_user_customer1 FOREIGN KEY (customer_id)
    REFERENCES store.customer (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


 /* Alter the CREATED AT values for a default now */
ALTER TABLE store.customer
    ALTER COLUMN customer_created_at SET DEFAULT now();

ALTER TABLE store.item
    ALTER COLUMN item_created_at SET DEFAULT now();

ALTER TABLE store.card
    ALTER COLUMN card_created_at SET DEFAULT now();

ALTER TABLE store.orders
    ALTER COLUMN order_created_at SET DEFAULT now();

ALTER TABLE store.sys_admin_user
    ALTER COLUMN sys_user_created_at SET DEFAULT now();

ALTER TABLE store.sys_user
    ALTER COLUMN sys_user_created_at SET DEFAULT now();


 /* Alter the UPDATED AT values for a default now */
ALTER TABLE store.customer
    ALTER COLUMN customer_updated_at SET DEFAULT now();

ALTER TABLE store.item
    ALTER COLUMN item_updated_at SET DEFAULT now();

ALTER TABLE store.card
    ALTER COLUMN card_updated_at SET DEFAULT now();

ALTER TABLE store.orders
    ALTER COLUMN order_updated_at SET DEFAULT now();

ALTER TABLE store.sys_admin_user
    ALTER COLUMN sys_user_updated_at SET DEFAULT now();

ALTER TABLE store.sys_user
    ALTER COLUMN sys_user_updated_at SET DEFAULT now();


/* Alter the LAST ATTEMPT values for a default now */
ALTER TABLE store.sys_admin_user
    ALTER COLUMN sys_user_last_attempt SET DEFAULT now();

ALTER TABLE store.sys_user
    ALTER COLUMN sys_user_last_attempt SET DEFAULT now();

/* DELETE CATEGORY RULE */
ALTER TABLE store.item_has_category
DROP CONSTRAINT fk_item_has_category_category1,
ADD CONSTRAINT fk_item_has_category_category1
FOREIGN KEY (category_id)
REFERENCES store.category (category_id)
ON DELETE CASCADE;

END;